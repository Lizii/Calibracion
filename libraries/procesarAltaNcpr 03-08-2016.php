<?php
	include_once ("../iniciar.php");

	define('FPDF_FONTPATH', '../fpdf/font/');

	include("../SimpleImage/SimpleImage.class.php");
	require_once('../fpdf/fpdf.php');
	include_once("../DBManager.php");
	
	$objCon=new DBManager;

	class PDF extends FPDF
	{
		var $widths;
		var $aligns;

		function Header()
		{
			$this->SetFont('helvetica', '', 10);
			$this->Ln(30);
		}

		function Footer()
		{
			$this->SetY(-20);
			$this->SetFont('helvetica', 'B', 8);
		}
	}

	if ($objCon->conectar()==true)
	{
		date_default_timezone_set('America/Los_Angeles');

		/*****************************************************************/
		/* Revisa en la base de datos la cantidad de registros de NCPR's */
		/*
		$sql0="SELECT COUNT(*) FROM tbncprs";
		$result0=mysql_query($sql0) or die;
		*/
		
		/* 
		Al número obtenido, se le suma 1 y se le asigna al NCPR */
		
		/*$id_Folio=(mysql_result($result0, 0)+1);*/
		
		/*****************************************************************/
					
		$GENERA=strtoupper($_SESSION['nombre']);

		if($_POST['reportado_por']=="OTRO")
			$REPORTA=strtoupper($_POST['reportado_otro']);
		else
			$REPORTA=strtoupper($_POST['reportado_por']);

		$TURNO=$_POST['turno'];

		$ORDEN=strtoupper($_POST['orden']);

		if(empty($_POST['fecha_na']))
			$FECHAENVIO=$_POST['fechaenvio'];
		else 
			$FECHAENVIO=$_POST['fecha_na'];

		$PARTE=strtoupper($_POST['parte']);
		$DESCRIPCIONPARTE=strtoupper($_POST['descripcionparte']);
		$PIEZASORDEN=$_POST['piezasorden'];
		$PIEZASRECHAZADAS=$_POST['piezasrechazadas'];
		$DESCRIPCIONFALLA=strtoupper($_POST['descripcionfalla']);

		$FECHA=date("Y-n-j");
		
		$f_anio=substr($FECHA, 0, 4);
		$f_mes=substr($FECHA,  5, 1);
		$f_dia=substr($FECHA,  7, 2);

		$HORA=date("H:i");
				
		$PROVEEDOR=$_POST['proveedor'];
		
		$DESTINO=$_POST['Destino'];
		
		$ORIGENCODIGO=$_POST['origen_codigo'];
		
		$ACCION=$_POST['accion'];
		
		/********************************/	
						
		if($_POST['origen_codigo']=="AC001")
		{
			$RECHAZO='AC001';
			$RECHAZODESCRIPCION='COMPONENTE INCORRECTO';
			$LOCALIZADEFECTO='ACCESS';
			$LOCALIZADEFECTODESC='ACCESORIES / ACCESORIOS';
		}
		if($_POST['origen_codigo']=="AC002")
		{
			$RECHAZO='AC002';
			$RECHAZODESCRIPCION='PRODUCTO DAÑADO';
			$LOCALIZADEFECTO='ACCESS';
			$LOCALIZADEFECTODESC='ACCESORIES / ACCESORIOS';
		}
		if($_POST['origen_codigo']=="AC003")
		{
			$RECHAZO='AC003';
			$RECHAZODESCRIPCION='PRODUCTO INCOMPLETO';
			$LOCALIZADEFECTO='ACCESS';
			$LOCALIZADEFECTODESC='ACCESORIES / ACCESORIOS';
		}
		if($_POST['origen_codigo']=="AC004")
		{
			$RECHAZO='AC004';
			$RECHAZODESCRIPCION='DISCREPANCIA EN CANTIDAD';
			$LOCALIZADEFECTO='ACCESS';
			$LOCALIZADEFECTODESC='ACCESORIES / ACCESORIOS';
		}
		if($_POST['origen_codigo']=="AC005")
		{
			$RECHAZO='AC005';
			$RECHAZODESCRIPCION='ERROR EN MARCAJE';
			$LOCALIZADEFECTO='ACCESS';
			$LOCALIZADEFECTODESC='ACCESORIES / ACCESORIOS';
		}
		if($_POST['origen_codigo']=="AC006")
		{
			$RECHAZO='AC006';
			$RECHAZODESCRIPCION=strtoupper($_POST['origen_otro']);
			$LOCALIZADEFECTO='ACCESS';
			$LOCALIZADEFECTODESC='ACCESORIES / ACCESORIOS';
		}
		if($_POST['origen_codigo']=="AD001")
		{
			$RECHAZO='AD001';
			$RECHAZODESCRIPCION='PERFORACION FUERA DE ESPECIFICACION';
			$LOCALIZADEFECTO='ALMDR';
			$LOCALIZADEFECTODESC='AL FAB DRILLING / FAB AL PERFORADO';
		}
		if($_POST['origen_codigo']=="AD002")
		{
			$RECHAZO='AD002';
			$RECHAZODESCRIPCION='PERFORACION O PROVISION EXTRA';
			$LOCALIZADEFECTO='ALMDR';
			$LOCALIZADEFECTODESC=' AL FAB DRILLING / FAB AL PERFORADO';
		}
		if($_POST['origen_codigo']=="AD003")
		{
			$RECHAZO='AD003';
			$RECHAZODESCRIPCION='PERFORACION O PROVISION FALTANTE';
			$LOCALIZADEFECTO='ALMDR';
			$LOCALIZADEFECTODESC='AL FAB DRILLING / FAB AL PERFORADO';
		}
		if($_POST['origen_codigo']=="AD004")
		{
			$RECHAZO='AD004';
			$RECHAZODESCRIPCION=strtoupper($_POST['origen_otro']);
			$LOCALIZADEFECTO='ALMDR';
			$LOCALIZADEFECTODESC='AL FAB DRILLING / FAB AL PERFORADO';
		}
		if($_POST['origen_codigo']=="AG001")
		{
			$RECHAZO='AG001';
			$RECHAZODESCRIPCION='PULIDO EXCESIVO';
			$LOCALIZADEFECTO='ALMGR';
			$LOCALIZADEFECTODESC='AL FAB GRINDING / FAB AL PULIDO';
		}
		if($_POST['origen_codigo']=="AG002")
		{
			$RECHAZO='AG002';
			$RECHAZODESCRIPCION='FALTANTE DE PULIDO';
			$LOCALIZADEFECTO='ALMGR';
			$LOCALIZADEFECTODESC='AL FAB GRINDING / FAB AL PULIDO';
		}
		if($_POST['origen_codigo']=="AG003")
		{
			$RECHAZO='AG003';
			$RECHAZODESCRIPCION=strtoupper($_POST['origen_otro']);
			$LOCALIZADEFECTO='ALMGR';
			$LOCALIZADEFECTODESC='AL FAB GRINDING / FAB AL PULIDO';
		}
		if($_POST['origen_codigo']=="AW001")
		{
			$RECHAZO='AW001';
			$RECHAZODESCRIPCION='APLICACION EXCESIVA DE SOLDADURA';
			$LOCALIZADEFECTO='ALMWL';
			$LOCALIZADEFECTODESC='AL FAB WELDING / FAB AL SOLDADURA';
		}
		if($_POST['origen_codigo']=="AW002")
		{
			$RECHAZO='AW002';
			$RECHAZODESCRIPCION='FALTANTE DE SOLDADURA';
			$LOCALIZADEFECTO='ALMWL';
			$LOCALIZADEFECTODESC='AL FAB WELDING / FAB AL SOLDADURA';
		}
		if($_POST['origen_codigo']=="AW003")
		{
			$RECHAZO='AW003';
			$RECHAZODESCRIPCION='APLICACION DISPAREJA DE SOLDADURA';
			$LOCALIZADEFECTO='ALMWL';
			$LOCALIZADEFECTODESC='AL FAB WELDING / FAB AL SOLDADURA';
		}
		if($_POST['origen_codigo']=="AW004")
		{
			$RECHAZO='AW004';
			$RECHAZODESCRIPCION='PARTE MAL UBICADA';
			$LOCALIZADEFECTO='ALMWL';
			$LOCALIZADEFECTODESC='AL FAB WELDING / FAB AL SOLDADURA';
		}
		if($_POST['origen_codigo']=="AW005")
		{
			$RECHAZO='AW005';
			$RECHAZODESCRIPCION='MATERIAL EQUIVOCADO EN PARTE';
			$LOCALIZADEFECTO='ALMWL';
			$LOCALIZADEFECTODESC='AL FAB WELDING / FAB AL SOLDADURA';
		}
		if($_POST['origen_codigo']=="AW006")
		{
			$RECHAZO='AW006';
			$RECHAZODESCRIPCION=strtoupper($_POST['origen_otro']);
			$LOCALIZADEFECTO='ALMWL';
			$LOCALIZADEFECTODESC='AL FAB WELDING / FAB AL SOLDADURA';
		}
		if($_POST['origen_codigo']=="CN001")
		{
			$RECHAZO='CN001';
			$RECHAZODESCRIPCION='ERROR EN PONCHADO';
			$LOCALIZADEFECTO='CNC01';
			$LOCALIZADEFECTODESC='CNC';
		}
		if($_POST['origen_codigo']=="CN002")
		{
			$RECHAZO='CN002';
			$RECHAZODESCRIPCION='ERROR EN DOBLADO';
			$LOCALIZADEFECTO='CNC01';
			$LOCALIZADEFECTODESC='CNC';
		}
		if($_POST['origen_codigo']=="CN003")
		{
			$RECHAZO='CN003';
			$RECHAZODESCRIPCION='DIMENSION FUERA DE ESPECIFICACION';
			$LOCALIZADEFECTO='CNC01';
			$LOCALIZADEFECTODESC='CNC';
		}
		if($_POST['origen_codigo']=="CN004")
		{
			$RECHAZO='CN004';
			$RECHAZODESCRIPCION=strtoupper($_POST['origen_otro']);
			$LOCALIZADEFECTO='CNC01';
			$LOCALIZADEFECTODESC='CNC';
		}
		if($_POST['origen_codigo']=="DC001")
		{
			$RECHAZO='DC001';
			$RECHAZODESCRIPCION='POROSIDAD';
			$LOCALIZADEFECTO='DCAST';
			$LOCALIZADEFECTODESC='DIE CASTING';
		}
		if($_POST['origen_codigo']=="DC002")
		{
			$RECHAZO='DC002';
			$RECHAZODESCRIPCION='DEFORMACION';
			$LOCALIZADEFECTO='DCAST';
			$LOCALIZADEFECTODESC='DIE CASTING';
		}
		if($_POST['origen_codigo']=="DC003")
		{
			$RECHAZO='DC003';
			$RECHAZODESCRIPCION='DEFLEXION';
			$LOCALIZADEFECTO='DCAST';
			$LOCALIZADEFECTODESC='DIE CASTING';
		}
		if($_POST['origen_codigo']=="DC004")
		{
			$RECHAZO='DC004';
			$RECHAZODESCRIPCION=strtoupper($_POST['origen_otro']);
			$LOCALIZADEFECTO='DCAST';
			$LOCALIZADEFECTODESC='DIE CASTING';
		}
		if($_POST['origen_codigo']=="FA001")
		{
			$RECHAZO='FA001';
			$RECHAZODESCRIPCION='ERROR EN ENSAMBLAJE';
			$LOCALIZADEFECTO='FASSY';
			$LOCALIZADEFECTODESC='FINAL ASSEMBLY / ENSAMBLE FINAL';
		}
		if($_POST['origen_codigo']=="FA002")
		{
			$RECHAZO='FA002';
			$RECHAZODESCRIPCION='PRODUCTO DAÑADO';
			$LOCALIZADEFECTO='FASSY';
			$LOCALIZADEFECTODESC='FINAL ASSEMBLY / ENSAMBLE FINAL';
		}
		if($_POST['origen_codigo']=="FA003")
		{
			$RECHAZO='FA003';
			$RECHAZODESCRIPCION='FALLA EN PRUEBA FUNCIONAL';
			$LOCALIZADEFECTO='FASSY';
			$LOCALIZADEFECTODESC='FINAL ASSEMBLY / ENSAMBLE FINAL';
		}
		if($_POST['origen_codigo']=="FA004")
		{
			$RECHAZO='FA004';
			$RECHAZODESCRIPCION='FALLA EN PRUEBA DIELECTRICA';
			$LOCALIZADEFECTO='FASSY';
			$LOCALIZADEFECTODESC='FINAL ASSEMBLY / ENSAMBLE FINAL';
		}
		if($_POST['origen_codigo']=="FA005")
		{
			$RECHAZO='FA005';
			$RECHAZODESCRIPCION='COMPONENTE INCORRECTO';
			$LOCALIZADEFECTO='FASSY';
			$LOCALIZADEFECTODESC='FINAL ASSEMBLY / ENSAMBLE FINAL';
		}
		if($_POST['origen_codigo']=="FA006")
		{
			$RECHAZO='FA006';
			$RECHAZODESCRIPCION='ERROR EN MARCAJE';
			$LOCALIZADEFECTO='FASSY';
			$LOCALIZADEFECTODESC='FINAL ASSEMBLY / ENSAMBLE FINAL';
		}
		if($_POST['origen_codigo']=="FA007")
		{
			$RECHAZO='FA007';
			$RECHAZODESCRIPCION='RESIDUOS DE MATERIAL';
			$LOCALIZADEFECTO='FASSY';
			$LOCALIZADEFECTODESC='FINAL ASSEMBLY / ENSAMBLE FINAL';
		}
		if($_POST['origen_codigo']=="FA008")
		{
			$RECHAZO='FA008';
			$RECHAZODESCRIPCION='COMPONENTE FALTANTE';
			$LOCALIZADEFECTO='FASSY';
			$LOCALIZADEFECTODESC='FINAL ASSEMBLY / ENSAMBLE FINAL';
		}
		if($_POST['origen_codigo']=="FA009")
		{
			$RECHAZO='FA009';
			$RECHAZODESCRIPCION='DAÑO EN CABLES';
			$LOCALIZADEFECTO='FASSY';
			$LOCALIZADEFECTODESC='FINAL ASSEMBLY / ENSAMBLE FINAL';
		}
		if($_POST['origen_codigo']=="FA010")
		{
			$RECHAZO='FA010';
			$RECHAZODESCRIPCION='COMPONENTE DAÑADO';
			$LOCALIZADEFECTO='FASSY';
			$LOCALIZADEFECTODESC='FINAL ASSEMBLY / ENSAMBLE FINAL';
		}
		if($_POST['origen_codigo']=="FA011")
		{
			$RECHAZO='FA011';
			$RECHAZODESCRIPCION='ERROR EN CABLEADO INTERIOR';
			$LOCALIZADEFECTO='FASSY';
			$LOCALIZADEFECTODESC='FINAL ASSEMBLY / ENSAMBLE FINAL';
		}
		if($_POST['origen_codigo']=="FA012")
		{
			$RECHAZO='FA012';
			$RECHAZODESCRIPCION='DAÑO EN CABLES DE CONEXION';
			$LOCALIZADEFECTO='FASSY';
			$LOCALIZADEFECTODESC='FINAL ASSEMBLY / ENSAMBLE FINAL';
		}
		if($_POST['origen_codigo']=="FA013")
		{
			$RECHAZO='FA013';
			$RECHAZODESCRIPCION='ERROR EN LONGITUD DE CABLES';
			$LOCALIZADEFECTO='FASSY';
			$LOCALIZADEFECTODESC='FINAL ASSEMBLY / ENSAMBLE FINAL';
		}
		if($_POST['origen_codigo']=="FA014")
		{
			$RECHAZO='FA014';
			$RECHAZODESCRIPCION='DAÑO POR MANEJO';
			$LOCALIZADEFECTO='FASSY';
			$LOCALIZADEFECTODESC='FINAL ASSEMBLY / ENSAMBLE FINAL';
		}
		if($_POST['origen_codigo']=="FA015")
		{
			$RECHAZO='FA015';
			$RECHAZODESCRIPCION=strtoupper($_POST['origen_otro']);
			$LOCALIZADEFECTO='FASSY';
			$LOCALIZADEFECTODESC='FINAL ASSEMBLY / ENSAMBLE FINAL';
		}
		if($_POST['origen_codigo']=="FO001")
		{
			$RECHAZO='FO001';
			$RECHAZODESCRIPCION='POROSIDAD';
			$LOCALIZADEFECTO='FNDRY';
			$LOCALIZADEFECTODESC='FOUNDRY / FUNDICION';
		}
		if($_POST['origen_codigo']=="FO002")
		{
			$RECHAZO='FO002';
			$RECHAZODESCRIPCION='DEFORMACION';
			$LOCALIZADEFECTO='FNDRY';
			$LOCALIZADEFECTODESC='FOUNDRY / FUNDICION';
		}
		if($_POST['origen_codigo']=="FO003")
		{
			$RECHAZO='FO003';
			$RECHAZODESCRIPCION=strtoupper($_POST['origen_otro']);
			$LOCALIZADEFECTO='FNDRY';
			$LOCALIZADEFECTODESC='FOUNDRY / FUNDICION';
		}
		if($_POST['origen_codigo']=="LD001")
		{
			$RECHAZO='LD001';
			$RECHAZODESCRIPCION='FALLA EN PRUEBA FUNCIONAL';
			$LOCALIZADEFECTO='LEDAS';
			$LOCALIZADEFECTODESC='LED ASSEMBLY / ENSAMBLE LED';
		}
		if($_POST['origen_codigo']=="LD002")
		{
			$RECHAZO='LD002';
			$RECHAZODESCRIPCION='COMPONENTE INCORRECTO';
			$LOCALIZADEFECTO='LEDAS';
			$LOCALIZADEFECTODESC='LED ASSEMBLY / ENSAMBLE LED';
		}
		if($_POST['origen_codigo']=="LD003")
		{
			$RECHAZO='LD003';
			$RECHAZODESCRIPCION='COMPONENTE FALTANTE';
			$LOCALIZADEFECTO='LEDAS';
			$LOCALIZADEFECTODESC='LED ASSEMBLY / ENSAMBLE LED';
		}
		if($_POST['origen_codigo']=="LD004")
		{
			$RECHAZO='LD004';
			$RECHAZODESCRIPCION='DAÑO EN CABLES';
			$LOCALIZADEFECTO='LEDAS';
			$LOCALIZADEFECTODESC='LED ASSEMBLY / ENSAMBLE LED';
		}
		if($_POST['origen_codigo']=="LD005")
		{
			$RECHAZO='LD005';
			$RECHAZODESCRIPCION='PRODUCTO DAÑADO';
			$LOCALIZADEFECTO='LEDAS';
			$LOCALIZADEFECTODESC='LED ASSEMBLY / ENSAMBLE LED';
		}
		if($_POST['origen_codigo']=="LD006")
		{
			$RECHAZO='LD006';
			$RECHAZODESCRIPCION='COMPONENTE DAÑADO';
			$LOCALIZADEFECTO='LEDAS';
			$LOCALIZADEFECTODESC='LED ASSEMBLY / ENSAMBLE LED';
		}
		if($_POST['origen_codigo']=="LD007")
		{
			$RECHAZO='LD007';
			$RECHAZODESCRIPCION=strtoupper($_POST['origen_otro']);
			$LOCALIZADEFECTO='LEDAS';
			$LOCALIZADEFECTODESC='LED ASSEMBLY / ENSAMBLE LED';
		}
		if($_POST['origen_codigo']=="OP001")
		{
			$RECHAZO='OP001';
			$RECHAZODESCRIPCION='WRONG MATERIAL USED IN ASSEMBLY / MATERIAL EQUIVOCADO EN ENSAMBLAJE';
			$LOCALIZADEFECTO='OPASS';
			$LOCALIZADEFECTODESC='OPTICS ASSEMBLY / ENSAMBLE REFLECTORES';
		}
		if($_POST['origen_codigo']=="OP002")
		{
			$RECHAZO='OP002';
			$RECHAZODESCRIPCION='SCRATCHES / RAYONES';
			$LOCALIZADEFECTO='OPASS';
			$LOCALIZADEFECTODESC='OPTICS ASSEMBLY / ENSAMBLE REFLECTORES';
		}
		if($_POST['origen_codigo']=="OP003")
		{
			$RECHAZO='OP003';
			$RECHAZODESCRIPCION='MISSING RIVET / FALTANTE DE REMACHE';
			$LOCALIZADEFECTO='OPASS';
			$LOCALIZADEFECTODESC='OPTICS ASSEMBLY / ENSAMBLE REFLECTORES';
		}
		if($_POST['origen_codigo']=="OP004")
		{
			$RECHAZO='OP004';
			$RECHAZODESCRIPCION='MOSSING HOLE - PROVISION / FALTANTE DE HOYO - PROVISION';
			$LOCALIZADEFECTO='OPASS';
			$LOCALIZADEFECTODESC='OPTICS ASSEMBLY / ENSAMBLE REFLECTORES';
		}
		if($_POST['origen_codigo']=="OP005")
		{
			$RECHAZO='OP005';
			$RECHAZODESCRIPCION='WRONG LAMP SOCKET / BASE PARA FOCO EQUIVOCADA';
			$LOCALIZADEFECTO='OPASS';
			$LOCALIZADEFECTODESC='OPTICS ASSEMBLY / ENSAMBLE REFLECTORES';
		}
		if($_POST['origen_codigo']=="OP006")
		{
			$RECHAZO='OP006';
			$RECHAZODESCRIPCION='MISSING LAMP SOCKET / BASE PARA FOCO FALTANTE';
			$LOCALIZADEFECTO='OPASS';
			$LOCALIZADEFECTODESC='OPTICS ASSEMBLY / ENSAMBLE REFLECTORES';
		}
		if($_POST['origen_codigo']=="OP007")
		{
			$RECHAZO='OP007';
			$RECHAZODESCRIPCION='DEFORMATION / DEFORMACION';
			$LOCALIZADEFECTO='OPASS';
			$LOCALIZADEFECTODESC='OPTICS ASSEMBLY / ENSAMBLE REFLECTORES';
		}
		if($_POST['origen_codigo']=="OP008")
		{
			$RECHAZO='OP008';
			$RECHAZODESCRIPCION=strtoupper($_POST['origen_otro']);
			$LOCALIZADEFECTO='OPASS';
			$LOCALIZADEFECTODESC='OPTICS ASSEMBLY / ENSAMBLE REFLECTORES';
		}
		if($_POST['origen_codigo']=="CR001")
		{
			$RECHAZO='CR001';
			$RECHAZODESCRIPCION='DESPRENDIMIENTO DE PISTA';
			$LOCALIZADEFECTO='PCBCR';
			$LOCALIZADEFECTODESC='PCB CLEAN ROOM / PCB CUARTO LIMPIO';
		}
		if($_POST['origen_codigo']=="CR002")
		{
			$RECHAZO='CR002';
			$RECHAZODESCRIPCION='DEFECTO EN SOLDADO';
			$LOCALIZADEFECTO='PCBCR';
			$LOCALIZADEFECTODESC='PCB CLEAN ROOM / PCB CUARTO LIMPIO';
		}
		if($_POST['origen_codigo']=="CR003")
		{
			$RECHAZO='CR003';
			$RECHAZODESCRIPCION='FALTA DE EPOXICO';
			$LOCALIZADEFECTO='PCBCR';
			$LOCALIZADEFECTODESC='PCB CLEAN ROOM / PCB CUARTO LIMPIO';
		}
		if($_POST['origen_codigo']=="CR004")
		{
			$RECHAZO='CR004';
			$RECHAZODESCRIPCION='EXCESO DE EPOXICO';
			$LOCALIZADEFECTO='PCBCR';
			$LOCALIZADEFECTODESC='PCB CLEAN ROOM / PCB CUARTO LIMPIO';
		}
		if($_POST['origen_codigo']=="CR005")
		{
			$RECHAZO='CR005';
			$RECHAZODESCRIPCION='DAÑO EN CABLES';
			$LOCALIZADEFECTO='PCBCR';
			$LOCALIZADEFECTODESC='PCB CLEAN ROOM / PCB CUARTO LIMPIO';
		}
		if($_POST['origen_codigo']=="CR006")
		{
			$RECHAZO='CR006';
			$RECHAZODESCRIPCION='DESALINEACION DE CLUSTER / LENS';
			$LOCALIZADEFECTO='PCBCR';
			$LOCALIZADEFECTODESC='PCB CLEAN ROOM / PCB CUARTO LIMPIO';
		}
		if($_POST['origen_codigo']=="CR007")
		{
			$RECHAZO='CR007';
			$RECHAZODESCRIPCION='GASKET EQUIVOCADO';
			$LOCALIZADEFECTO='PCBCR';
			$LOCALIZADEFECTODESC='PCB CLEAN ROOM / PCB CUARTO LIMPIO';
		}
		if($_POST['origen_codigo']=="CR008")
		{
			$RECHAZO='CR008';
			$RECHAZODESCRIPCION='FALTA DE CURADO UV';
			$LOCALIZADEFECTO='PCBCR';
			$LOCALIZADEFECTODESC='PCB CLEAN ROOM / PCB CUARTO LIMPIO';
		}
		if($_POST['origen_codigo']=="CR009")
		{
			$RECHAZO='CR009';
			$RECHAZODESCRIPCION='CLUSTER / LENS EQUIVOCADO';
			$LOCALIZADEFECTO='PCBCR';
			$LOCALIZADEFECTODESC='PCB CLEAN ROOM / PCB CUARTO LIMPIO';
		}
		if($_POST['origen_codigo']=="CR010")
		{
			$RECHAZO='CR010';
			$RECHAZODESCRIPCION='PCB EQUIVOCADO';
			$LOCALIZADEFECTO='PCBCR';
			$LOCALIZADEFECTODESC='PCB CLEAN ROOM / PCB CUARTO LIMPIO';
		}
		if($_POST['origen_codigo']=="CR011")
		{
			$RECHAZO='CR011';
			$RECHAZODESCRIPCION='DAÑOS DURANTE ENSAMBLAJE';
			$LOCALIZADEFECTO='PCBCR';
			$LOCALIZADEFECTODESC='PCB CLEAN ROOM / PCB CUARTO LIMPIO';
		}
		if($_POST['origen_codigo']=="CR012")
		{
			$RECHAZO='CR012';
			$RECHAZODESCRIPCION=strtoupper($_POST['origen_otro']);
			$LOCALIZADEFECTO='PCBCR';
			$LOCALIZADEFECTODESC='PCB CLEAN ROOM / PCB CUARTO LIMPIO';
		}
		if($_POST['origen_codigo']=="PI001")
		{
			$RECHAZO='PI001';
			$RECHAZODESCRIPCION='BURBUJAS DE AIRE';
			$LOCALIZADEFECTO='PINRD';
			$LOCALIZADEFECTODESC='PLASTIC INJECTION (RD) / INYECCION PLASTICO (RD)';
		}
		if($_POST['origen_codigo']=="PI002")
		{
			$RECHAZO='PI002';
			$RECHAZODESCRIPCION='MANCHAS';
			$LOCALIZADEFECTO='PINRD';
			$LOCALIZADEFECTODESC='PLASTIC INJECTION (RD) / INYECCION PLASTICO (RD)';
		}
		if($_POST['origen_codigo']=="PI003")
		{
			$RECHAZO='PI003';
			$RECHAZODESCRIPCION='DECOLORACION';
			$LOCALIZADEFECTO='PINRD';
			$LOCALIZADEFECTODESC='PLASTIC INJECTION (RD) / INYECCION PLASTICO (RD)';
		}
		if($_POST['origen_codigo']=="PI004")
		{
			$RECHAZO='PI004';
			$RECHAZODESCRIPCION='QUEBRADURAS';
			$LOCALIZADEFECTO='PINRD';
			$LOCALIZADEFECTODESC='PLASTIC INJECTION (RD) / INYECCION PLASTICO (RD)';
		}
		if($_POST['origen_codigo']=="PI005")
		{
			$RECHAZO='PI005';
			$RECHAZODESCRIPCION='DEFORMACION';
			$LOCALIZADEFECTO='PINRD';
			$LOCALIZADEFECTODESC='PLASTIC INJECTION (RD) / INYECCION PLASTICO (RD)';
		}
		if($_POST['origen_codigo']=="PI006")
		{
			$RECHAZO='PI006';
			$RECHAZODESCRIPCION=strtoupper($_POST['origen_otro']);
			$LOCALIZADEFECTO='PINRD';
			$LOCALIZADEFECTODESC='PLASTIC INJECTION (RD) / INYECCION PLASTICO (RD)';
		}
		if($_POST['origen_codigo']=="PC001")
		{
			$RECHAZO='PC001';
			$RECHAZODESCRIPCION='AMPOLLAS';
			$LOCALIZADEFECTO='PCOAT';
			$LOCALIZADEFECTODESC='POWDER COAT / PINTURA';
		}
		if($_POST['origen_codigo']=="PC002")
		{
			$RECHAZO='PC002';
			$RECHAZODESCRIPCION='COLOR INCONSISTENTE';
			$LOCALIZADEFECTO='PCOAT';
			$LOCALIZADEFECTODESC='POWDER COAT / PINTURA';
		}
		if($_POST['origen_codigo']=="PC003")
		{
			$RECHAZO='PC003';
			$RECHAZODESCRIPCION='CONTAMINACION';
			$LOCALIZADEFECTO='PCOAT';
			$LOCALIZADEFECTODESC='POWDER COAT / PINTURA';
		}
		if($_POST['origen_codigo']=="PC004")
		{
			$RECHAZO='PC004';
			$RECHAZODESCRIPCION='PRODUCTO DAÑADO';
			$LOCALIZADEFECTO='PCOAT';
			$LOCALIZADEFECTODESC='POWDER COAT / PINTURA';
		}
		if($_POST['origen_codigo']=="PC005")
		{
			$RECHAZO='PC005';
			$RECHAZODESCRIPCION='DECOLORACION';
			$LOCALIZADEFECTO='PCOAT';
			$LOCALIZADEFECTODESC='POWDER COAT / PINTURA';
		}
		if($_POST['origen_codigo']=="PC006")
		{
			$RECHAZO='PC006';
			$RECHAZODESCRIPCION='RESIDUO DE PASTA';
			$LOCALIZADEFECTO='PCOAT';
			$LOCALIZADEFECTODESC='POWDER COAT / PINTURA';
		}
		if($_POST['origen_codigo']=="PC007")
		{
			$RECHAZO='PC007';
			$RECHAZODESCRIPCION='RESIDUO DE GRASA';
			$LOCALIZADEFECTO='PCOAT';
			$LOCALIZADEFECTODESC='POWDER COAT / PINTURA';
		}
		if($_POST['origen_codigo']=="PC008")
		{
			$RECHAZO='PC008';
			$RECHAZODESCRIPCION='CASCARA DE NARANJA';
			$LOCALIZADEFECTO='PCOAT';
			$LOCALIZADEFECTODESC='POWDER COAT / PINTURA';
		}
		if($_POST['origen_codigo']=="PC009")
		{
			$RECHAZO='PC009';
			$RECHAZODESCRIPCION='EXCESO DE PINTURA';
			$LOCALIZADEFECTO='PCOAT';
			$LOCALIZADEFECTODESC='POWDER COAT / PINTURA';
		}
		if($_POST['origen_codigo']=="PC010")
		{
			$RECHAZO='PC010';
			$RECHAZODESCRIPCION='POROSIDAD';
			$LOCALIZADEFECTO='PCOAT';
			$LOCALIZADEFECTODESC='POWDER COAT / PINTURA';
		}
		if($_POST['origen_codigo']=="PC011")
		{
			$RECHAZO='PC011';
			$RECHAZODESCRIPCION='MALA ADHERENCIA';
			$LOCALIZADEFECTO='PCOAT';
			$LOCALIZADEFECTODESC='POWDER COAT / PINTURA';
		}
		if($_POST['origen_codigo']=="PC012")
		{
			$RECHAZO='PC012';
			$RECHAZODESCRIPCION='FALTA DE COBERTURA';
			$LOCALIZADEFECTO='PCOAT';
			$LOCALIZADEFECTODESC='POWDER COAT / PINTURA';
		}
		if($_POST['origen_codigo']=="PC013")
		{
			$RECHAZO='PC013';
			$RECHAZODESCRIPCION='RAYONES';
			$LOCALIZADEFECTO='PCOAT';
			$LOCALIZADEFECTODESC='POWDER COAT / PINTURA';
		}
		if($_POST['origen_codigo']=="PC014")
		{
			$RECHAZO='PC014';
			$RECHAZODESCRIPCION='COLOR EQUIVOCADO';
			$LOCALIZADEFECTO='PCOAT';
			$LOCALIZADEFECTODESC='POWDER COAT / PINTURA';
		}
		if($_POST['origen_codigo']=="PC015")
		{
			$RECHAZO='PC015';
			$RECHAZODESCRIPCION='RESIDUO DE GRANALLA';
			$LOCALIZADEFECTO='PCOAT';
			$LOCALIZADEFECTODESC='POWDER COAT / PINTURA';
		}
		if($_POST['origen_codigo']=="PC016")
		{
			$RECHAZO='PC016';
			$RECHAZODESCRIPCION='RESIDUO DE MASKING O CINTA ADHESIVA';
			$LOCALIZADEFECTO='PCOAT';
			$LOCALIZADEFECTODESC='POWDER COAT / PINTURA';
		}
		if($_POST['origen_codigo']=="PC017")
		{
			$RECHAZO='PC017';
			$RECHAZODESCRIPCION='SUB CURADO';
			$LOCALIZADEFECTO='PCOAT';
			$LOCALIZADEFECTODESC='POWDER COAT / PINTURA';
		}
		if($_POST['origen_codigo']=="PC018")
		{
			$RECHAZO='PC018';
			$RECHAZODESCRIPCION=strtoupper($_POST['origen_otro']);
			$LOCALIZADEFECTO='PCOAT';
			$LOCALIZADEFECTODESC='POWDER COAT / PINTURA';
		}
		if($_POST['origen_codigo']=="SM001")
		{
			$RECHAZO='SM001';
			$RECHAZODESCRIPCION='PCB MAL IDENTIFICADO';
			$LOCALIZADEFECTO='SMTRD';
			$LOCALIZADEFECTODESC='SMT ROOM (RD) / CUARTO SMT (RD)';
		}
		if($_POST['origen_codigo']=="SM002")
		{
			$RECHAZO='SM002';
			$RECHAZODESCRIPCION='DESPRENDIMIENTO DE DIODO (LED)';
			$LOCALIZADEFECTO='SMTRD';
			$LOCALIZADEFECTODESC='SMT ROOM (RD) / CUARTO SMT (RD)';
		}
		if($_POST['origen_codigo']=="SM003")
		{
			$RECHAZO='SM003';
			$RECHAZODESCRIPCION='RAYONES';
			$LOCALIZADEFECTO='SMTRD';
			$LOCALIZADEFECTODESC='SMT ROOM (RD) / CUARTO SMT (RD)';
		}
		if($_POST['origen_codigo']=="SM004")
		{
			$RECHAZO='SM004';
			$RECHAZODESCRIPCION='MANCHAS';
			$LOCALIZADEFECTO='SMTRD';
			$LOCALIZADEFECTODESC='SMT ROOM (RD) / CUARTO SMT (RD)';
		}
		if($_POST['origen_codigo']=="SM005")
		{
			$RECHAZO='SM005';
			$RECHAZODESCRIPCION='QUEBRADURAS';
			$LOCALIZADEFECTO='SMTRD';
			$LOCALIZADEFECTODESC='SMT ROOM (RD) / CUARTO SMT (RD)';
		}
		if($_POST['origen_codigo']=="SM006")
		{
			$RECHAZO='SM006';
			$RECHAZODESCRIPCION=strtoupper($_POST['origen_otro']);
			$LOCALIZADEFECTO='SMTRD';
			$LOCALIZADEFECTODESC='SMT ROOM (RD) / CUARTO SMT (RD)';
		}
		if($_POST['origen_codigo']=="SP001")
		{
			$RECHAZO='SP001';
			$RECHAZODESCRIPCION='DIMENSION FUERA DE ESPECIFICACION';
			$LOCALIZADEFECTO='SPNNG';
			$LOCALIZADEFECTODESC='SPINNING';
		}
		if($_POST['origen_codigo']=="SP002")
		{
			$RECHAZO='SP002';
			$RECHAZODESCRIPCION='MATERIAL EQUIVOCADO EN PARTE';
			$LOCALIZADEFECTO='SPNNG';
			$LOCALIZADEFECTODESC='SPINNING';
		}
		if($_POST['origen_codigo']=="SP003")
		{
			$RECHAZO='SP003';
			$RECHAZODESCRIPCION='QUEBRADURAS';
			$LOCALIZADEFECTO='SPNNG';
			$LOCALIZADEFECTODESC='SPINNING';
		}
		if($_POST['origen_codigo']=="SP004")
		{
			$RECHAZO='SP004';
			$RECHAZODESCRIPCION='DEFORMACION';
			$LOCALIZADEFECTO='SPNNG';
			$LOCALIZADEFECTODESC='SPINNING';
		}
		if($_POST['origen_codigo']=="SP005")
		{
			$RECHAZO='SP005';
			$RECHAZODESCRIPCION=strtoupper($_POST['origen_otro']);
			$LOCALIZADEFECTO='SPNNG';
			$LOCALIZADEFECTODESC='SPINNING';
		}
		if($_POST['origen_codigo']=="ST001")
		{
			$RECHAZO='ST001';
			$RECHAZODESCRIPCION='PERFORACION FUERA DE ESPECIFICACION';
			$LOCALIZADEFECTO='STLFB';
			$LOCALIZADEFECTODESC='STEEL FABRICATION / FABRICACION ACERO';
		}
		if($_POST['origen_codigo']=="ST002")
		{
			$RECHAZO='ST002';
			$RECHAZODESCRIPCION='PERFORACION O PROVISION EXTRA';
			$LOCALIZADEFECTO='STLFB';
			$LOCALIZADEFECTODESC='STEEL FABRICATION / FABRICACION ACERO';
		}
		if($_POST['origen_codigo']=="ST003")
		{
			$RECHAZO='ST003';
			$RECHAZODESCRIPCION='PERFORACION O PROVISION FALTANTE';
			$LOCALIZADEFECTO='STLFB';
			$LOCALIZADEFECTODESC='STEEL FABRICATION / FABRICACION ACERO';
		}
		if($_POST['origen_codigo']=="ST004")
		{
			$RECHAZO='ST004';
			$RECHAZODESCRIPCION='APLICACION EXCESIVA DE SOLDADURA';
			$LOCALIZADEFECTO='STLFB';
			$LOCALIZADEFECTODESC='STEEL FABRICATION / FABRICACION ACERO';
		}
		if($_POST['origen_codigo']=="ST005")
		{
			$RECHAZO='ST005';
			$RECHAZODESCRIPCION='FALTANTE DE SOLDADURA';
			$LOCALIZADEFECTO='STLFB';
			$LOCALIZADEFECTODESC='STEEL FABRICATION / FABRICACION ACERO';
		}
		if($_POST['origen_codigo']=="ST006")
		{
			$RECHAZO='ST006';
			$RECHAZODESCRIPCION='APLICACION DISPAREJA DE SOLDADURA';
			$LOCALIZADEFECTO='STLFB';
			$LOCALIZADEFECTODESC='STEEL FABRICATION / FABRICACION ACERO';
		}
		if($_POST['origen_codigo']=="ST007")
		{
			$RECHAZO='ST007';
			$RECHAZODESCRIPCION='PARTE MAL UBICADA';
			$LOCALIZADEFECTO='STLFB';
			$LOCALIZADEFECTODESC='STEEL FABRICATION / FABRICACION ACERO';
		}
		if($_POST['origen_codigo']=="ST008")
		{
			$RECHAZO='ST008';
			$RECHAZODESCRIPCION='MATERIAL EQUIVOCADO EN PARTE';
			$LOCALIZADEFECTO='STLFB';
			$LOCALIZADEFECTODESC='STEEL FABRICATION / FABRICACION ACERO';
		}
		if($_POST['origen_codigo']=="ST009")
		{
			$RECHAZO='ST009';
			$RECHAZODESCRIPCION='PULIDO EXCESIVO';
			$LOCALIZADEFECTO='STLFB';
			$LOCALIZADEFECTODESC='STEEL FABRICATION / FABRICACION ACERO';
		}
		if($_POST['origen_codigo']=="ST010")
		{
			$RECHAZO='ST010';
			$RECHAZODESCRIPCION=strtoupper($_POST['origen_otro']);
			$LOCALIZADEFECTO='STLFB';
			$LOCALIZADEFECTODESC='STEEL FABRICATION / FABRICACION ACERO';
		}
		if($_POST['origen_codigo']=="SE001")
		{
			$RECHAZO='SE001';
			$RECHAZODESCRIPCION='COMPONENTE INCORRECTO';
			$LOCALIZADEFECTO='SPEXT';
			$LOCALIZADEFECTODESC='SUPPLIER (EXTERNAL) / PROVEEDOR (EXTERNO)';
		}
		if($_POST['origen_codigo']=="SE002")
		{
			$RECHAZO='SE002';
			$RECHAZODESCRIPCION='PRODUCTO DAÑADO';
			$LOCALIZADEFECTO='SPEXT';
			$LOCALIZADEFECTODESC='SUPPLIER (EXTERNAL) / PROVEEDOR (EXTERNO)';
		}
		if($_POST['origen_codigo']=="SE003")
		{
			$RECHAZO='SE003';
			$RECHAZODESCRIPCION='PRODUCTO INCOMPLETO';
			$LOCALIZADEFECTO='SPEXT';
			$LOCALIZADEFECTODESC='SUPPLIER (EXTERNAL) / PROVEEDOR (EXTERNO)';
		}
		if($_POST['origen_codigo']=="SE004")
		{
			$RECHAZO='SE004';
			$RECHAZODESCRIPCION='DISCREPANCIA EN CANTIDAD';
			$LOCALIZADEFECTO='SPEXT';
			$LOCALIZADEFECTODESC='SUPPLIER (EXTERNAL) / PROVEEDOR (EXTERNO)';
		}
		if($_POST['origen_codigo']=="SE005")
		{
			$RECHAZO='SE005';
			$RECHAZODESCRIPCION='ERROR EN MARCAJE';
			$LOCALIZADEFECTO='SPEXT';
			$LOCALIZADEFECTODESC='SUPPLIER (EXTERNAL) / PROVEEDOR (EXTERNO)';
		}
		if($_POST['origen_codigo']=="SE006")
		{
			$RECHAZO='SE006';
			$RECHAZODESCRIPCION=strtoupper($_POST['origen_otro']);
			$LOCALIZADEFECTO='SPEXT';
			$LOCALIZADEFECTODESC='SUPPLIER (EXTERNAL) / PROVEEDOR (EXTERNO)';
		}
		if($_POST['origen_codigo']=="WH001")
		{
			$RECHAZO='WH001';
			$RECHAZODESCRIPCION='COMPONENTE ENTREGADO INCORRECTO';
			$LOCALIZADEFECTO='WHSRE';
			$LOCALIZADEFECTODESC='WAREHOUSE / ALMACEN';
		}
		if($_POST['origen_codigo']=="WH002")
		{
			$RECHAZO='WH002';
			$RECHAZODESCRIPCION='DAÑO POR MANEJO';
			$LOCALIZADEFECTO='WHSRE';
			$LOCALIZADEFECTODESC='WAREHOUSE / ALMACEN';
		}
		if($_POST['origen_codigo']=="WH003")
		{
			$RECHAZO='WH003';
			$RECHAZODESCRIPCION='PRODUCTO INCOMPLETO';
			$LOCALIZADEFECTO='WHSRE';
			$LOCALIZADEFECTODESC='WAREHOUSE / ALMACEN';
		}
		if($_POST['origen_codigo']=="WH004")
		{
			$RECHAZO='WH004';
			$RECHAZODESCRIPCION='DISCREPANCIA EN CANTIDAD';
			$LOCALIZADEFECTO='WHSRE';
			$LOCALIZADEFECTODESC='WAREHOUSE / ALMACEN';
		}
		if($_POST['origen_codigo']=="WH005")
		{
			$RECHAZO='WH005';
			$RECHAZODESCRIPCION='COMPONENTES MEZCLADOS';
			$LOCALIZADEFECTO='WHSRE';
			$LOCALIZADEFECTODESC='WAREHOUSE / ALMACEN';
		}
		if($_POST['origen_codigo']=="WH006")
		{
			$RECHAZO='WH006';
			$RECHAZODESCRIPCION=strtoupper($_POST['origen_otro']);
			$LOCALIZADEFECTO='WHSRE';
			$LOCALIZADEFECTODESC='WAREHOUSE / ALMACEN';
		}
	
		/******************************/	
		
		if(($LOCACIONDEFECTO=$_POST['localiza_defecto'])=="SPROC")
		{
			$LOCACIONDEFECTO='SPROC';
			$LOCACIONDEFECTODESC='INSPECCION AL INICIO DEL PROCESO / START OF PROCESS INSPECTION';
		}	
		if(($LOCACIONDEFECTO=$_POST['localiza_defecto'])=="IPROC")
		{
			$LOCACIONDEFECTO='IPROC';
			$LOCACIONDEFECTODESC='DURANTE EL PROCESO / IN PROCESS INSPECTION';
		}	
		if(($LOCACIONDEFECTO=$_POST['localiza_defecto'])=="EPROC")
		{
			$LOCACIONDEFECTO='EPROC';
			$LOCACIONDEFECTODESC='INSPECCION AL FINAL DE PROCESO / END OF PROCESS INSPECTION';
		}	
		if(($LOCACIONDEFECTO=$_POST['localiza_defecto'])=="WHSRE")
		{
			$LOCACIONDEFECTO='WHSRE';
			$LOCACIONDEFECTODESC='ALMACEN (EN INVENTARIO) / WHAREHOUSE (IN STOCK)';
		}	
		if(($LOCACIONDEFECTO=$_POST['localiza_defecto'])=="INCOM")
		{
			$LOCACIONDEFECTO='INCOM';
			$LOCACIONDEFECTODESC='INSPECCION DE RECIBOS / INCOMING INSPECTION';
		}	
		if(($LOCACIONDEFECTO=$_POST['localiza_defecto'])=="SHIPG")
		{
			$LOCACIONDEFECTO='SHIPG';
			$LOCACIONDEFECTODESC='EMBARQUES / SHIPPING';
		}	
		if(($LOCACIONDEFECTO=$_POST['localiza_defecto'])=="THR01")
		{
			$LOCACIONDEFECTO='THR01';
			$LOCACIONDEFECTODESC=strtoupper($_POST['localiza_defecto_otro']);
		}

		/***************************************/
	
		if(($DISPOSICION=$_POST['disposicion'])=="SCRAP")
		{
			$DISPOSICION='SCRAP';
			$DISPOSICIONDESCRIPCION='DESECHAR (SCRAP) / SCRAP';
		}	
		if(($DISPOSICION=$_POST['disposicion'])=="RT2RD")
		{
			$DISPOSICION='RT2RD';
			$DISPOSICIONDESCRIPCION='REGRESAR A RANCHO DOMINGUEZ / RETURN TO RANCHO DOMINGUEZ';
		}	
		if(($DISPOSICION=$_POST['disposicion'])=="RT2VD")
		{
			$DISPOSICION='RT2VD';
			$DISPOSICIONDESCRIPCION='REGRESAR A PROVEEDOR / RETURN TO SUPPLIER (EXTERNAL)';
		}	
		if(($DISPOSICION=$_POST['disposicion'])=="USEAI")
		{
			$DISPOSICION='USEAI';
			$DISPOSICIONDESCRIPCION='USAR COMO ESTA / USE AS IS';
		}	
		if(($DISPOSICION=$_POST['disposicion'])=="REWRK")
		{
			$DISPOSICION='REWRK';
			$DISPOSICIONDESCRIPCION='RE-TRABAJAR / REWORK';
		}	
		if(($DISPOSICION=$_POST['disposicion'])=="SRTQA")
		{
			$DISPOSICION='SRTQA';
			$DISPOSICIONDESCRIPCION='SEPARAR / SORT';
		}	
		if(($DISPOSICION=$_POST['disposicion'])=="TBDQA")
		{
			$DISPOSICION='TBDQA';
			$DISPOSICIONDESCRIPCION='POR DEFINIR (QA) / TO BE DETERMINED (QA)';
		}		
		if(($DISPOSICION=$_POST['disposicion'])=="THR02")
		{
			$DISPOSICION='THR02';
			$DISPOSICIONDESCRIPCION=strtoupper($_POST['disposicion_otro']);
		}
		
		
		/***************************************/

		if(($DETECCION=$_POST['areadeptdeteccion'])=="ACCES")
		{
			$DETECCION='ACCES';
			$DETECCIONDESCRIPCION='ACCESORIOS / ACCESORIES';
		}
		if(($DETECCION=$_POST['areadeptdeteccion'])=="ALMDR")
		{
			$DETECCION='ALMDR';
			$DETECCIONDESCRIPCION='FAB AL PERFORADO / AL FAB DRILLING';
		}	
		if(($DETECCION=$_POST['areadeptdeteccion'])=="ALMGR")
		{
			$DETECCION='ALMGR';
			$DETECCIONDESCRIPCION='FAB AL PULIDO / AL FAB GRINDING';
		}	
		if(($DETECCION=$_POST['areadeptdeteccion'])=="ALMWL")
		{
			$DETECCION='ALMWL';
			$DETECCIONDESCRIPCION='FAB AL SOLDADURA / AL FAB WELDING';
		}	
		if(($DETECCION=$_POST['areadeptdeteccion'])=="CNC01")
		{
			$DETECCION='CNC01';
			$DETECCIONDESCRIPCION='CNC';
		}	
		if(($DETECCION=$_POST['areadeptdeteccion'])=="DCAST")
		{
			$DETECCION='DCAST';
			$DETECCIONDESCRIPCION='DIE CASTING';
		}	
		if(($DETECCION=$_POST['areadeptdeteccion'])=="DRASS")
		{
			$DETECCION='DRASS';
			$DETECCIONDESCRIPCION='ENSAMBLE PUERTAS / DOOR ASSEMBLY';
		}	
		if(($DETECCION=$_POST['areadeptdeteccion'])=="EXTSP")
		{
			$DETECCION='EXTSP';
			$DETECCIONDESCRIPCION='PROVEEDOR EXTERNO / EXTERNAL SUPPLIER';
		}	
		if(($DETECCION=$_POST['areadeptdeteccion'])=="FASS1")
		{
			$DETECCION='FASS1';
			$DETECCIONDESCRIPCION='ENSAMBLE FINAL LINEA 1 / FINAL ASSEMBLY LINE 1';
		}	
		if(($DETECCION=$_POST['areadeptdeteccion'])=="FASS2")
		{
			$DETECCION='FASS2';
			$DETECCIONDESCRIPCION='ENSAMBLE FINAL LINEA 2 / FINAL ASSEMBLY LINE 2';
		}	
		if(($DETECCION=$_POST['areadeptdeteccion'])=="FASS3")
		{
			$DETECCION='FASS3';
			$DETECCIONDESCRIPCION='ENSAMBLE FINAL LINEA 3 / FINAL ASSEMBLY LINE 3';
		}	
		if(($DETECCION=$_POST['areadeptdeteccion'])=="FASS4")
		{
			$DETECCION='FASS4';
			$DETECCIONDESCRIPCION='ENSAMBLE FINAL LINEA 4 / FINAL ASSEMBLY LINE 4';
		}	
		if(($DETECCION=$_POST['areadeptdeteccion'])=="FASS5")
		{
			$DETECCION='FASS5';
			$DETECCIONDESCRIPCION='ENSAMBLE FINAL LINEA 5 / FINAL ASSEMBLY LINE 5';
		}	
		if(($DETECCION=$_POST['areadeptdeteccion'])=="FASS6")
		{
			$DETECCION='FASS6';
			$DETECCIONDESCRIPCION='ENSAMBLE FINAL LINEA 6 / FINAL ASSEMBLY LINE 6';
		}	
		if(($DETECCION=$_POST['areadeptdeteccion'])=="FNDRY")
		{
			$DETECCION='FNDRY';
			$DETECCIONDESCRIPCION='FUNDICION / FOUNDRY';
		}	
		if(($DETECCION=$_POST['areadeptdeteccion'])=="LEDAS")
		{
			$DETECCION='LEDAS';
			$DETECCIONDESCRIPCION='ENSAMBLE LED / LED ASSEMBLY';
		}	
		if(($DETECCION=$_POST['areadeptdeteccion'])=="OPASS")
		{
			$DETECCION='OPASS';
			$DETECCIONDESCRIPCION='ENSAMBLE REFLECTORES / OPTICAL ASSEMBLY';
		}	
		if(($DETECCION=$_POST['areadeptdeteccion'])=="PCBCR")
		{
			$DETECCION='PCBCR';
			$DETECCIONDESCRIPCION='PCB CUARTO LIMPIO / PCB CLEAN ROOM';
		}	
		if(($DETECCION=$_POST['areadeptdeteccion'])=="PCOAT")
		{
			$DETECCION='PCOAT';
			$DETECCIONDESCRIPCION='PINTURA / POWDER COAT';
		}	
		if(($DETECCION=$_POST['areadeptdeteccion'])=="PINRD")
		{
			$DETECCION='PINRD';
			$DETECCIONDESCRIPCION='INYECCION PLASTICO RD / INJECTION MOLDING RD';
		}	
		if(($DETECCION=$_POST['areadeptdeteccion'])=="SHIPP")
		{
			$DETECCION='SHIPP';
			$DETECCIONDESCRIPCION='EMBARQUES / SHIPPING';
		}	
		if(($DETECCION=$_POST['areadeptdeteccion'])=="SMTRD")
		{
			$DETECCION='SMTRD';
			$DETECCIONDESCRIPCION='MONTAJE SMT RD / SMT ROOM RD';
		}	
		if(($DETECCION=$_POST['areadeptdeteccion'])=="SPNNG")
		{
			$DETECCION='SPNNG';
			$DETECCIONDESCRIPCION='SPINNING';
		}	
		if(($DETECCION=$_POST['areadeptdeteccion'])=="STLFB")
		{
			$DETECCION='STLFB';
			$DETECCIONDESCRIPCION='FAB ACERO / STEEL FABRICATION';
		}	
		if(($DETECCION=$_POST['areadeptdeteccion'])=="SUBAS")
		{
			$DETECCION='SUBAS';
			$DETECCIONDESCRIPCION='SUB ENSAMBLE / SUB ASSEMBLY';
		}
		if(($DETECCION=$_POST['areadeptdeteccion'])=="WHSRE")
		{
			$DETECCION='WHSRE';
			$DETECCIONDESCRIPCION='ALMACEN / WAREHOUSE';
		}					
		if(($DETECCION=$_POST['areadeptdeteccion'])=="THR03")
		{
			$DETECCION='THR03';
			$DETECCIONDESCRIPCION=strtoupper($_POST['areadeptdeteccion_otro']);
		}
		
		$DETEC=$DETECCION ."-". $DETECCIONDESCRIPCION;
		
		/***************************************/		
		
		$sql="INSERT INTO tbncprs VALUES('NULL', '', '$ORDEN', '$PARTE', '$TURNO', '$FECHAENVIO', '$DESCRIPCIONPARTE', '$PROVEEDOR', '$REPORTA', '$GENERA', '$FECHA', '$HORA', '$LOCALIZADEFECTO', '$LOCALIZADEFECTODESC', '$PIEZASORDEN', '$PIEZASRECHAZADAS', '$RECHAZO', '$RECHAZODESCRIPCION', '$DESCRIPCIONFALLA', '$LOCACIONDEFECTO', '$LOCACIONDEFECTODESC', '$DISPOSICION', '$DISPOSICIONDESCRIPCION', '$DETECCION', '$DETECCIONDESCRIPCION', '$ACCION', '$DESTINO')";
		$result=mysql_query($sql);	
		
		$id_Folio=(mysql_insert_id());
		$id_Folio=str_pad($id_Folio, 6, "0", STR_PAD_LEFT);
		
		
		$NOMBRE_PDF="NCPR".$id_Folio;
		
		$sql_update="UPDATE tbncprs SET Nombre_PDF='$NOMBRE_PDF' WHERE id_Folio='$id_Folio'";
		$result=mysql_query($sql_update);
		if (! $result)
		{
			echo "La consulta SQL contiene errores.".mysql_error();
			exit();
		}
	}

	/****************** Variables para el PDF *******************/

	$DISPOSICIONPD=$DISPOSICION .' - '. $DISPOSICIONDESCRIPCION;
	$LOCALIZADD=$LOCALIZADEFECTO .' - '. $LOCALIZADEFECTODESC;
	$LOCACIONFD=$LOCACIONDEFECTO .' - '. $LOCACIONDEFECTODESC;
	$RECHAZOD=$RECHAZO .' - '. $RECHAZODESCRIPCION;
	

	/* Declaración de variables */
	$documento_no="VL-PA-SGC-001-F02";
	$pagina="1 OF 1";
	$document="NON-CONFORMING PRODUCT REPORT";
	$revision="4";
	$fecha=$f_mes."-".$f_dia."-".$f_anio;
	$nombre_documento="NON-CONFORMING PRODUCT REPORT (ENGLISH)";
			
	/* Fin de declaración de variables */

	/* Variables del sistema*/
	$setx=13;
	$cellx=45;
	$cellsize=194;
	$setderecha=99;
	/* Fin de variables del sistema */

	// PDF(Vertical, Milimetros, Tamaño Carta)
	$pdf=new PDF('P', 'mm', 'Letter');
	$pdf->AddPage();
	$pdf->SetFont('helvetica', '', '8');
	
	//Rect(Izquierda, Arriba, Derecha, Abajo)
	$pdf->Rect(11, 13, 198, 235);   // Contenedor principal
	
	$pdf->Image('../img/Logo.jpg', 27, 17, 65); //Imagen de logotipo
	//Rect(Izquierda, Arriba, Derecha, Abajo)
	$pdf->Rect($setx, 15, 97, 15);    // Recuadro del Logo

	$pdf->SetXY(110, 19);
	$pdf->SetFont('Arial', 'B', '8');
	$pdf->SetFillColor(255, 255, 255); // Color Blanco
	$pdf->cell(63, 5, "DOCUMENTO NO.:", 0, 1, 'C', 'F');

	$pdf->SetXY(110, 24);
	$pdf->SetFont('Arial', '', '8');
	$pdf->Cell(63, 5, $documento_no, 0, 1, 'C');

	//Rect(Izquierda, Arriba, Derecha, Abajo)
	$pdf->Rect(110, 15, 63, 15);

	/***************************************************************************/
	
	$pdf->SetXY(173, 19);
	$pdf->SetFont('Arial', 'B', '8');
	$pdf->cell(34, 5, "PAGINA:", 0, 1, 'C');

	$pdf->SetXY(173, 24);
	$pdf->SetFont('Arial', '', '8');
	$pdf->Cell(34, 5, $pagina, 0, 1, 'C');

	$pdf->SetXY(115, 580);
	//Rect(Izquierda, Arriba, Derecha, Abajo)
	$pdf->Rect(173, 15, 34, 15);

	/***************************************************************************/

	$pdf->SetXY($setx, 31.5);
	$pdf->SetFont('Arial', 'B', '8');
	$pdf->cell(19, 5, "DOCUMENT:", 0, 1, 'L');

	$pdf->SetXY($setx+19, 31.5);
	$pdf->SetFont('Arial', '', '8');
	$pdf->Cell(60, 5, $document, 0, 1, 'L');

	$pdf->SetXY($setx, 35.5);
	$pdf->SetFont('Arial', 'B', '8');
	$pdf->Cell(16, 5, "REVISION:", 0, 1, 'L');

	$pdf->SetXY($setx+16, 35.5);
	$pdf->SetFont('Arial', '', '8');
	$pdf->Cell(63, 5, $revision, 0, 1, 'L');

	$pdf->SetXY($setx, 39.5);
	$pdf->SetFont('Arial', 'B', '8');
	$pdf->Cell(12, 5, "FECHA:", 0, 1, 'L');

	$pdf->SetXY($setx+12, 39.5);
	$pdf->SetFont('Arial', '', '8');
	$pdf->Cell(66, 5, $fecha, 0, 1, 'L');
	//Rect(Izquierda, Arriba, Derecha, Abajo)
	$pdf->Rect($setx, 30, 97, 15);    // DOCUMENT

	/***************************************************************************/

	//Rect(Izquierda, Arriba, Derecha, Abajo)
	$pdf->SetXY(110, 31.5);
	$pdf->SetFont('Arial', 'B', '8');
	$pdf->Cell(97, 5, "NOMBRE DEL DOCUMENTO:", 0, 1, 'C');

	$pdf->SetXY(110, 35.5);
	$pdf->SetFont('Arial', '', '8');
	$pdf->Cell(97, 5, $nombre_documento, 0, 1, 'C');

	$pdf->Rect(110, 30, $setderecha-2, 15);    // NOMBRE DEL DOCUMENTO

	/***************************************************************************/

	$pdf->SetXY(110, 50);
	$pdf->SetFont('Arial', 'B', '8');
	$pdf->SetFillColor(81, 180, 241); // Color Azul
	// L (El texto de la celda lo envia a la derecha), F (Rellena la celda con el color seleccionado)
	$pdf->Cell(63, 5, "Folio No. (File No.):", 1, 1, 'C', 'C');

	$pdf->SetXY(173, 50);
	$pdf->SetFont('Arial', '', '8');
	$pdf->SetTextColor(51, 51, 153); // Color Morado
	$pdf->Cell(34, 5, $NOMBRE_PDF, 1, 1, 'C');

	/***************************************************************************/

	$pdf->SetXY($setx, 55);
	$pdf->SetTextColor(0, 0, 0); // Color Negro
	$pdf->SetFillColor(81, 180, 241); // Color Azul
	// C (Centra el texto de la celda), F (Rellena la celda con el color seleccionado)
	$pdf->Cell($cellsize, 5, utf8_decode("(1) Información general del reporte (General Information of the report)"), 1, 1, 'C', 'F');

	/***************************************************************************/

	$pdf->SetXY($setx, 60);
	$pdf->SetTextColor(0, 0, 0); // Color Negro
	$pdf->SetFillColor(255, 255, 255); // Color Blanco
	$pdf->Multicell($cellx+6, 10, "Reportado por (Reported by):", 1, 1, 'L', 'F');
	
	$pdf->SetXY(64, 60);
	$pdf->SetTextColor(31, 73, 125); // Color Azul
	$pdf->Cell(46, 10, utf8_decode($REPORTA), 1, 1, 'C', 'F');
	 
	$pdf->SetXY(110, 60);
	$pdf->SetTextColor(0, 0, 0); // Color Negro
	$pdf->Multicell(47, 10, "Generado por (Generated by):", 1, 1, 'C', 'F');

	$pdf->SetXY(155, 60);
	$pdf->SetTextColor(31, 73, 125); // Color Azul
	$pdf->Cell(52, 10, utf8_decode($GENERA), 1, 1, 'C', 'F');

	/***************************************************************************/

	$pdf->SetXY($setx, 70);
	$pdf->SetTextColor(0, 0, 0); // Color Negro
	$pdf->Multicell($cellx+6, 10, utf8_decode("Área/Department (Detected On):"), 1, 1, 'L', 'F');
	
	$pdf->SetXY(65, 70.5);
	$pdf->SetTextColor(31, 73, 125); // Color Azul
	$pdf->SetFont('Arial', '', '7');
	$pdf->Multicell(44, 3, utf8_decode($DETEC), 0, 1, 'C', 'F');

	$pdf->SetXY(110, 70);
	$pdf->SetTextColor(0, 0, 0); // Color Negro
	$pdf->SetFont('Arial', '', '8');
	$pdf->Multicell(45, 10, utf8_decode("Área/Department (Origin defect):"), 1, 1, 'L', 'F');

	$pdf->SetXY(156, 70.5);
	$pdf->SetTextColor(31, 73, 125); // Color Azul
	$pdf->SetFont('Arial', '', '7');
	$pdf->Multicell(50, 3, utf8_decode($LOCALIZADD), 0, 1, 'C', 'F');


	//Rect(Izquierda, Arriba, Derecha, Abajo)
	$pdf->Rect(155, 70, 52, 10);    // $LOCALIZADD

	/***************************************************************************/
	
	$pdf->SetXY($setx, 80);
	$pdf->SetTextColor(0, 0, 0); // Color Negro
	$pdf->SetFont('Arial', '', '8');
	$pdf->cell($cellx+6, 5, "Fecha (Date):", 1, 1, 'L', 'F');

	$pdf->SetXY(64, 80);
	$pdf->SetTextColor(31, 73, 125); // Color Azul
	$pdf->cell(22, 5, $fecha, 1, 1, 'C', 'F');

	$pdf->SetXY(86, 80);
	$pdf->SetTextColor(0, 0, 0); // Color Negro
	$pdf->cell(24, 5, "Hora (Time):", 1, 1, 'L', 'F');

	$pdf->SetXY(110, 80);
	$pdf->SetTextColor(31, 73, 125); // Color Azul
	$pdf->cell(22, 5, $HORA, 1, 1, 'C', 'F'); 

	$pdf->SetXY(132, 80);
	$pdf->SetTextColor(0, 0, 0); // Color Negro
	$pdf->cell(23, 5, "Turno (Shift):", 1, 1, 'L', 'F');

	$pdf->SetXY(155, 80);
	$pdf->SetTextColor(31, 73, 125); // Color Azul
	$pdf->cell(52, 5, $TURNO, 1, 1, 'C', 'F');

	/***************************************************************************/

	$pdf->SetXY($setx, 85);
	$pdf->SetTextColor(0, 0, 0); // Color Negro
	$pdf->cell(51, 5, utf8_decode("Número de Job (Job Number)"), 1, 1, 'L', 'F');

	$pdf->SetXY(64, 85);
	$pdf->SetTextColor(31, 73, 125); // Color Azul
	$pdf->cell(46, 5, $ORDEN, 1, 1, 'C', 'F');

	$pdf->SetXY(110, 85);
	$pdf->SetTextColor(0, 0, 0); // Color Negro
	$pdf->cell($cellx+2, 5, "Fecha de Envio (Shipping date):", 1, 1, 'L', 'F');

	$pdf->SetXY(155, 85);
	$pdf->SetTextColor(31, 73, 125); // Color Azul
	$pdf->cell(52, 5, $FECHAENVIO, 1, 1, 'C', 'F');

	/***************************************************************************/

	$pdf->SetXY($setx, 90);
	$pdf->SetTextColor(0, 0, 0); // Color Negro
	$pdf->cell($cellx+6, 5, "No. De Parte (Part No.):", 1, 1, 'L', 'F');

	$pdf->SetXY(64, 90);
	$pdf->SetTextColor(31, 73, 125); // Color Azul
	$pdf->cell(143, 5, $PARTE, 1, 1, 'C', 'F');

	/***************************************************************************/

	$pdf->SetXY($setx, 95);
	$pdf->SetTextColor(0, 0, 0); // Color Negro
	$pdf->Multicell($cellx+6, 5, utf8_decode("Descripción del producto o la parte (Product/Part description):"), 1, 1, 'L', 'F');

	$pdf->SetXY(64, 95);
	$pdf->SetTextColor(31, 73, 125); // Color Azul
	$pdf->cell(143, 10, utf8_decode($DESCRIPCIONPARTE), 1, 1, 'C', 'F');

	/***************************************************************************/

	$pdf->SetXY($setx, 105);
	$pdf->SetTextColor(0, 0, 0); // Color Negro
	$pdf->Multicell($cellx+6, 10, "Nombre del proveedor (Vendor name):", 1, 1, 'L', 'F');

	$pdf->SetXY(64, 105);
	$pdf->SetTextColor(31, 73, 125); // Color Azul
	$pdf->cell(143, 10, utf8_decode($PROVEEDOR), 1, 1, 'C', 'F');

	/***************************************************************************/

	$pdf->SetXY($setx, 115);
	$pdf->SetTextColor(0, 0, 0); // Color Negro
	$pdf->Multicell(73, 10, "No. de piezas en el job (No. of pieces in the job):", 1, 1, 'L', 'F');

	$pdf->SetXY(86, 115);
	$pdf->SetTextColor(31, 73, 125); // Color Azul
	$pdf->cell(24, 10, $PIEZASORDEN, 1, 1, 'C', 'F');

	$pdf->SetXY(110, 115);
	$pdf->SetTextColor(0, 0, 0); // Color Negro
	$pdf->Multicell(65, 5, "No. de piezas rechazadas (No. of pieces rejected):", 1, 1, 'L', 'F');

	$pdf->SetXY(173, 115);
	$pdf->SetTextColor(31, 73, 125); // Color Azul
	$pdf->cell(34, 10, $PIEZASRECHAZADAS, 1, 1, 'C', 'F');

	/***************************************************************************/
	
	$pdf->SetXY($setx, 125);
	$pdf->SetTextColor(0, 0, 0); // Color Negro
	$pdf->SetFillColor(81, 180, 241); // Color Azul
	// C (Centra el texto de la celda), F (Rellena la celda con el color seleccionado)
	$pdf->Cell($cellsize, 5, utf8_decode("(2) Razón de rechazo (Reason for rejection)"), 1, 1, 'C', 'F');

	/***************************************************************************/
	
	$pdf->SetXY($setx, 130);
	$pdf->SetTextColor(31, 73, 125); // Color Azul
	$pdf->SetFillColor(255, 255, 255); // Color Blanco
	$pdf->cell($cellsize, 10, utf8_decode($RECHAZOD), 1, 1, 'C', 'F');	
	
	/***************************************************************************/
	
	$pdf->SetXY($setx, 140);
	$pdf->SetTextColor(0, 0, 0); // Color Negro
	$pdf->SetFillColor(81, 180, 241); // Color Azul
	// C (Centra el texto de la celda), F (Rellena la celda con el color seleccionado)
	$pdf->Cell($cellsize, 5, utf8_decode("(3) Descripción de la no-conformidad (DESCRIPTION OF THE NON-CONFORMANCE)"), 1, 1, 'C', 'F');

	/***************************************************************************/
	
	$pdf->SetXY($setx, 146);
	$pdf->SetTextColor(31, 73, 125);   // Color Azul
	$pdf->SetFillColor(255, 255, 255); // Color Blanco
	$pdf->Multicell(190, 4, utf8_decode($DESCRIPCIONFALLA), 0, 1, 'C', 'F');	
	//Rect(Izquierda, Arriba, Derecha, Abajo)
	$pdf->Rect($setx, 145, $cellsize, 20); // (3) Descripción  
	
	/***************************************************************************/
	
	$pdf->SetXY($setx, 165);
	$pdf->SetTextColor(0, 0, 0); // Color Negro
	$pdf->SetFillColor(81, 180, 241); // Color Azul

	//Rect(Izquierda, Arriba, Derecha, Abajo)
	$pdf->Rect(110, 165.1, $setderecha-2, 10, 'F'); // (5) Disposición del producto

	// C (Centra el texto de la celda), F (Rellena la celda con el color seleccionado)
	$pdf->Cell(97, 10, utf8_decode("(4) Localización del defecto (Detected on)"), 1, 1, 'C', 'F');

	$pdf->SetXY(111, 166);
	// C (Centra el texto de la celda), F (Rellena la celda con el color seleccionado)
	$pdf->Multicell(95, 4, utf8_decode("(5) Disposición del producto no conforme (Disposition of non-conformance product)"), 0, 1, 'C');

	/***************************************************************************/

	$pdf->SetXY($setx+1, 176);
	$pdf->SetTextColor(31, 73, 125);    // Color Azul
	$pdf->SetFillColor(255, 255, 255);  // Color Gris
	// C (Centra el texto de la celda), F (Rellena la celda con el color seleccionado)
	$pdf->Multicell(95, 4, utf8_decode($LOCACIONFD), 0, 1, 'C', 'F');

	$pdf->SetXY(111, 176);
	$pdf->SetTextColor(31, 73, 125); // Color Azul
	// C (Centra el texto de la celda), F (Rellena la celda con el color seleccionado)
	$pdf->Multicell(95, 4, utf8_decode($DISPOSICIONPD), 0, 1, 'C', 'F');

	//Rect(Izquierda, Arriba, Derecha, Abajo)
	$pdf->Rect($setx, 175, $setderecha-2, 10); // (4) Localización del defecto*/
	$pdf->Rect(110, 175, $setderecha-2, 10);   // (5) Disposición del producto  
	$pdf->Rect(110, 165, $setderecha-2, 10);   // $DISPOSICIONPD  

	/***************************************************************************/

	$pdf->SetXY($setx, 185);
	$pdf->SetTextColor(0, 0, 0); // Color Negro
	$pdf->SetFillColor(81, 180, 241); // Color Azul
	// C (Centra el texto de la celda), F (Rellena la celda con el color seleccionado)
	$pdf->Cell($cellsize, 5, utf8_decode("Archivo fotográfico (Photo archive)"), 1, 1, 'C', 'F');

	/***************************************************************************/

	$pdf->SetXY($setx, 190);
	$pdf->SetFillColor(255, 255, 255); // Color Blanco
	// C (Centra el texto de la celda), F (Rellena la celda con el color seleccionado)
	$pdf->Multicell(64.6, 56, utf8_decode(""), 1, 1, 'C');

	$pdf->SetXY($setx+64.6, 190);

	// C (Centra el texto de la celda)
	$pdf->Multicell(64.6, 56, utf8_decode(""), 1, 1, 'C');

	$pdf->SetXY($setx+129, 190);
	// C (Centra el texto de la celda)
	$pdf->Multicell(65, 56, utf8_decode(""), 1, 1, 'C');

    /***************************************************************************/

    $obj_simpleimage=new SimpleImage();       	  											       // Sea crea un objeto de la clase SimpleImage()

    $foto1=$_FILES['foto1']['name'];		  	   												   // Obtenemos el nombre de la foto1 	
	$foto2=$_FILES['foto2']['name'];          	  												   // Obtenemos el nombre de la foto2 	
	$foto3=$_FILES['foto3']['name'];		  	  												   // Obtenemos el nombre de la foto3 	

	$ruta_foto1=$_FILES['foto1']['tmp_name']; 	   												   // Guarda la foto1 en una carpeta temporalmente	
	$ruta_foto2=$_FILES['foto2']['tmp_name']; 	  												   // Guarda la foto1 en una carpeta temporalmente	
	$ruta_foto3=$_FILES['foto3']['tmp_name']; 	   												   // Guarda la foto1 en una carpeta temporalmente	  

	$destino_foto1="../fotos/".$foto1;		  	   												   // Generamos la dirección donde seguardará la foto1
	$destino_foto2="../fotos/".$foto2;		 	  												   // Generamos la dirección donde seguardará la foto1
	$destino_foto3="../fotos/".$foto3;		 	  											       // Generamos la dirección donde seguardará la foto1

	$foto1_nuevo=time().rand().".jpg";		       												   // Generamos un nuevo nombre aleatorio para la foto1
	$foto2_nuevo=time().rand().".jpg";		       												   // Generamos un nuevo nombre aleatorio para la foto2
	$foto3_nuevo=time().rand().".jpg";		  	  												   // Generamos un nuevo nombre aleatorio para la foto3

	$destino_foto1_nuevo="../fotos/".$foto1_nuevo; 												   // Generamos la dirección donde seguardará la foto1_nuevo
	$destino_foto2_nuevo="../fotos/".$foto2_nuevo; 												   // Generamos la dirección donde seguardará la foto2_nuevo
	$destino_foto3_nuevo="../fotos/".$foto3_nuevo; 												   // Generamos la dirección donde seguardará la foto3_nuevo

	if($foto1 && $foto2 && $foto3!=NULL) // Si las variables $foto1, $foto2 y $foto3 contienen imagenes, las tres imágenes se agregarán al archivo pdf
	{
		copy($ruta_foto1, $destino_foto1); 														   // Guarda la foto1 en el servidor
		copy($ruta_foto2, $destino_foto2); 														   // Guarda la foto1 en el servidor
		copy($ruta_foto3, $destino_foto3); 														   // Guarda la foto1 en el servidor

		$obj_simpleimage->load($destino_foto1);													   // Carga la foto1
		$obj_simpleimage->resize($obj_simpleimage->getWidth()/4, $obj_simpleimage->getHeight()/4); // Redimensiona la imágen a 1/4 de su tamaño real
		$obj_simpleimage->save($destino_foto1_nuevo);											   // Guarda los cambios realizados							

		if($obj_simpleimage->getWidth()>$obj_simpleimage->getHeight())							   // Si el ancho de la foto1 es maá grande que el alto ... 
		{																						   
			$pdf->Image($destino_foto1_nuevo, 15.3,  200, 60); 									   // ... Agrega la foto1 en el archivo pdf en forma horizontal
		}					
		else                                                                                       // De no ser así ...
		{
			$pdf->Image($destino_foto1_nuevo, 30,  191.3, 30);                                     // ... Agrega la foto1 en el archivo pdf en forma vertical
		}

		$obj_simpleimage->load($destino_foto2);													   // Carga la imágen foto2
		$obj_simpleimage->resize($obj_simpleimage->getWidth()/4, $obj_simpleimage->getHeight()/4); // Redimensiona la imágen a 1/4 de su tamaño real
		$obj_simpleimage->save($destino_foto2_nuevo);											   // Guarda los cambios realizados	

		if($obj_simpleimage->getWidth()>$obj_simpleimage->getHeight())							   // Si el ancho de la foto2 es maá grande que el alto ... 
		{
			$pdf->Image($destino_foto2_nuevo, 79.7,  200, 60);	 								   // ... Agrega la imágen foto2 en el archivo pdf en forma horizontal
		}
		else                                                                                       // De no ser así ...
		{
			$pdf->Image($destino_foto2_nuevo, 95,  191.3, 30);                                     // ... Agrega la imágen foto2 en el archivo pdf en forma vertical
		}

		$obj_simpleimage->load($destino_foto3);                                                    // Carga la imágen foto2
		$obj_simpleimage->resize($obj_simpleimage->getWidth()/4, $obj_simpleimage->getHeight()/4); // Redimensiona la imágen a 1/4 de su tamaño real
		$obj_simpleimage->save($destino_foto3_nuevo);                                              // Guarda los cambios realizados	
	 	
		if($obj_simpleimage->getWidth()>$obj_simpleimage->getHeight())							   // Si el ancho de la foto3 es maá grande que el alto ... 
		{
			$pdf->Image($destino_foto3_nuevo, 144.4, 200, 60);	 								   // ... Agrega la imágen foto3 en el archivo pdf en forma horizontal
		}
		else                                                                                       // De no ser así ...
		{
			$pdf->Image($destino_foto3_nuevo, 160, 191.3, 30);                                     // ... Agrega la imágen foto3 en el archivo pdf en forma vertical
		}
	}
	else if($foto1 && $foto2!=NULL)  // Si las variables $foto1 y $foto2 contienen imagenes, las dos imágenes se agregarán al archivo pdf
	{
		copy($ruta_foto1, $destino_foto1);
		copy($ruta_foto2, $destino_foto2);

		$obj_simpleimage->load($destino_foto1);
		$obj_simpleimage->resize($obj_simpleimage->getWidth()/4, $obj_simpleimage->getHeight()/4);
		$obj_simpleimage->save($destino_foto1_nuevo);

		if($obj_simpleimage->getWidth()>$obj_simpleimage->getHeight())							   // Si el ancho de la foto1 es maá grande que el alto ... 
		{																						   
			$pdf->Image($destino_foto1_nuevo, 15.3,  200, 60); 									   // ... Agrega la foto1 en el archivo pdf en forma horizontal
		}					
		else                                                                                       // De no ser así ...
		{
			$pdf->Image($destino_foto1_nuevo, 30,  191.3, 30);                                     // ... Agrega la foto1 en el archivo pdf en forma vertical
		}

		$obj_simpleimage->load($destino_foto2);
		$obj_simpleimage->resize($obj_simpleimage->getWidth()/4, $obj_simpleimage->getHeight()/4);
		$obj_simpleimage->save($destino_foto2_nuevo);

		if($obj_simpleimage->getWidth()>$obj_simpleimage->getHeight())							   // Si el ancho de la foto2 es maá grande que el alto ... 
		{
			$pdf->Image($destino_foto2_nuevo, 79.7,  200, 60);	 								   // ... Agrega la imágen foto2 en el archivo pdf en forma horizontal
		}
		else                                                                                       // De no ser así ...
		{
			$pdf->Image($destino_foto2_nuevo, 95,  191.3, 30);                                     // ... Agrega la imágen foto2 en el archivo pdf en forma vertical
		}
	}
	else if($foto1 && $foto3!=NULL) // Si las variables $foto1 y $foto3 contienen imagenes, las dos imágenes se agregarán al archivo pdf
	{
		copy($ruta_foto1, $destino_foto1);
		copy($ruta_foto3, $destino_foto3);

		$obj_simpleimage->load($destino_foto1);
		$obj_simpleimage->resize($obj_simpleimage->getWidth()/4, $obj_simpleimage->getHeight()/4);
		$obj_simpleimage->save($destino_foto1_nuevo);

		if($obj_simpleimage->getWidth()>$obj_simpleimage->getHeight())							   // Si el ancho de la foto1 es maá grande que el alto ... 
		{																						   
			$pdf->Image($destino_foto1_nuevo, 15.3,  200, 60); 									   // ... Agrega la foto1 en el archivo pdf en forma horizontal
		}					
		else                                                                                       // De no ser así ...
		{
			$pdf->Image($destino_foto1_nuevo, 30,  191.3, 30);                                     // ... Agrega la foto1 en el archivo pdf en forma vertical
		}

		$obj_simpleimage->load($destino_foto3);
		$obj_simpleimage->resize($obj_simpleimage->getWidth()/4, $obj_simpleimage->getHeight()/4);
		$obj_simpleimage->save($destino_foto3_nuevo);

		if($obj_simpleimage->getWidth()>$obj_simpleimage->getHeight())							   // Si el ancho de la foto3 es maá grande que el alto ... 
		{
			$pdf->Image($destino_foto3_nuevo, 144.4, 200, 60);	 								   // ... Agrega la imágen foto3 en el archivo pdf en forma horizontal
		}
		else                                                                                       // De no ser así ...
		{
			$pdf->Image($destino_foto3_nuevo, 160, 191.3, 30);                                     // ... Agrega la imágen foto3 en el archivo pdf en forma vertical
		}
	}
	else if($foto2 && $foto3!=NULL) // Si las variables $foto2 y $foto3 contienen imagenes, las dos imágenes se agregarán al archivo pdf
	{
		copy($ruta_foto2, $destino_foto2);
		copy($ruta_foto3, $destino_foto3);

		$obj_simpleimage->load($destino_foto2);
		$obj_simpleimage->resize($obj_simpleimage->getWidth()/4, $obj_simpleimage->getHeight()/4);
		$obj_simpleimage->save($destino_foto2_nuevo);

		if($obj_simpleimage->getWidth()>$obj_simpleimage->getHeight())							   // Si el ancho de la foto2 es maá grande que el alto ... 
		{
			$pdf->Image($destino_foto2_nuevo, 79.7,  200, 60);	 								   // ... Agrega la imágen foto2 en el archivo pdf en forma horizontal
		}
		else                                                                                       // De no ser así ...
		{
			$pdf->Image($destino_foto2_nuevo, 95,  191.3, 30);                                     // ... Agrega la imágen foto2 en el archivo pdf en forma vertical
		}

		$obj_simpleimage->load($destino_foto3);
		$obj_simpleimage->resize($obj_simpleimage->getWidth()/4, $obj_simpleimage->getHeight()/4);
		$obj_simpleimage->save($destino_foto3_nuevo);

		if($obj_simpleimage->getWidth()>$obj_simpleimage->getHeight())							   // Si el ancho de la foto3 es maá grande que el alto ... 
		{
			$pdf->Image($destino_foto3_nuevo, 144.4, 200, 60);	 								   // ... Agrega la imágen foto3 en el archivo pdf en forma horizontal
		}
		else                                                                                       // De no ser así ...
		{
			$pdf->Image($destino_foto3_nuevo, 160, 191.3, 30);                                     // ... Agrega la imágen foto3 en el archivo pdf en forma vertical
		}
	}
	else if($foto1!=NULL)
	{
		copy($ruta_foto1, $destino_foto1);

		$obj_simpleimage->load($destino_foto1);
		$obj_simpleimage->resize($obj_simpleimage->getWidth()/4, $obj_simpleimage->getHeight()/4);
		$obj_simpleimage->save($destino_foto1_nuevo);

		if($obj_simpleimage->getWidth()>$obj_simpleimage->getHeight())							   // Si el ancho de la foto1 es maá grande que el alto ... 
		{																						   
			$pdf->Image($destino_foto1_nuevo, 15.3,  200, 60); 									   // ... Agrega la foto1 en el archivo pdf en forma horizontal
		}					
		else                                                                                       // De no ser así ...
		{
			$pdf->Image($destino_foto1_nuevo, 30,  191.3, 30);                                     // ... Agrega la foto1 en el archivo pdf en forma vertical
		}
	}
	else if($foto2!=NULL)
	{
		copy($ruta_foto2, $destino_foto2);

		$obj_simpleimage->load($destino_foto2);
		$obj_simpleimage->resize($obj_simpleimage->getWidth()/4, $obj_simpleimage->getHeight()/4);
		$obj_simpleimage->save($destino_foto2_nuevo);

		if($obj_simpleimage->getWidth()>$obj_simpleimage->getHeight())							   // Si el ancho de la foto2 es maá grande que el alto ... 
		{
			$pdf->Image($destino_foto2_nuevo, 79.7,  200, 60);	 								   // ... Agrega la imágen foto2 en el archivo pdf en forma horizontal
		}
		else                                                                                       // De no ser así ...
		{
			$pdf->Image($destino_foto2_nuevo, 95,  191.3, 30);                                     // ... Agrega la imágen foto2 en el archivo pdf en forma vertical
		}
	}
	else if($foto3!=NULL)
	{
		copy($ruta_foto3, $destino_foto3);
		
		$obj_simpleimage->load($destino_foto3);
		$obj_simpleimage->resize($obj_simpleimage->getWidth()/4, $obj_simpleimage->getHeight()/4);
		$obj_simpleimage->save($destino_foto3_nuevo);

		if($obj_simpleimage->getWidth()>$obj_simpleimage->getHeight())							   // Si el ancho de la foto3 es maá grande que el alto ... 
		{
			$pdf->Image($destino_foto3_nuevo, 144.4, 200, 60);	 								   // ... Agrega la imágen foto3 en el archivo pdf en forma horizontal
		}
		else                                                                                       // De no ser así ...
		{
			$pdf->Image($destino_foto3_nuevo, 160, 191.3, 30);                                     // ... Agrega la imágen foto3 en el archivo pdf en forma vertical
		}
	}
	
	/* Elimina las fotos del servidor */
	if ($foto1!=NULL) 
	{
		unlink($destino_foto1);
		unlink($destino_foto1_nuevo);

		if($foto2!=NULL)
		{
			unlink($destino_foto2);
			unlink($destino_foto2_nuevo);

			if($foto3!=NULL)
			{
				unlink($destino_foto3);
				unlink($destino_foto3_nuevo);
			}
		} 
	}
	else if ($foto2!=NULL) 
	{
		unlink($destino_foto2);
		unlink($destino_foto2_nuevo);

		if($foto3!=NULL)
		{
			unlink($destino_foto3);
			unlink($destino_foto3_nuevo);
		}
	}
	else if ($foto3!=NULL) 
	{
		unlink($destino_foto3);
		unlink($destino_foto3_nuevo);
	}

	/***************************************************************************/

	$pdf->SetXY(12.5, 251);
	$pdf->SetFillColor(255, 255, 255); // Color Gris
	// C (Centra el texto de la celda), F (Rellena la celda con el color seleccionado)
	$pdf->Multicell(195, 4, utf8_decode("2016 Visionaire Lighting. This document was created for the use of Visionaire Lighting and can be reproduced exclusively for those related to the company and under expressed written approval."), 0, 1, 'L');

	/***************************************************************************/

	$pdf->Output("../ncpr/$NOMBRE_PDF.pdf", "F");  // Guarda el archivo pdf en la carpeta ncpr
	//$pdf->Output("../ncpr/$NOMBRE_PDF.pdf", "I");  // Abre el archivo pdf en el navegador

	/***************************************************************************/

	echo "<script language='JavaScript'>
				window.alert('El formato NCPR ha sido creado. Se está enviando por correo.') 
				window.location.href='../mail.php?id_folio=$id_Folio'
			</script>";
?>